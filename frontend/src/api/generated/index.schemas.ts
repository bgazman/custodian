/**
 * Generated by orval v7.4.1 üç∫
 * Do not edit manually.
 * Your API
 * OpenAPI spec version: 1.0.0
 */
export type GetJwks500 = { [key: string]: unknown };

export type GetJwks200 = { [key: string]: unknown };

export type GetOpenIdConfiguration500 = { [key: string]: unknown };

export type GetOpenIdConfiguration200 = { [key: string]: unknown };

export type GetUsersInGroup500 = { [key: string]: unknown };

export type GetUsersInGroup200 = { [key: string]: unknown };

export type GetGroupsForUser500 = { [key: string]: unknown };

export type GetGroupsForUser200 = { [key: string]: unknown };

export type CheckPermissionExists500 = { [key: string]: unknown };

export type CheckPermissionExists200 = { [key: string]: unknown };

export type CheckPermissionExistsParams = {
name: string;
};

export type FindPermissionByName500 = { [key: string]: unknown };

export type FindPermissionByName200 = { [key: string]: unknown };

export type FindPermissionByNameParams = {
name: string;
};

export type GetProtectedData1500 = { [key: string]: unknown };

export type GetProtectedData1200 = {[key: string]: string};

export type GetProtectedData500 = { [key: string]: unknown };

export type GetProtectedData200 = {[key: string]: string};

export type GetPermissionsForGroup500 = { [key: string]: unknown };

export type GetPermissionsForGroup200 = { [key: string]: unknown };

export type GetGroupsForPermission500 = { [key: string]: unknown };

export type GetGroupsForPermission200 = { [key: string]: unknown };

export type SearchGroups500 = { [key: string]: unknown };

export type SearchGroups200 = { [key: string]: unknown };

export type SearchGroupsParams = {
name: string;
};

export type SearchRoles500 = { [key: string]: unknown };

export type SearchRoles200 = { [key: string]: unknown };

export type SearchRolesParams = {
name: string;
};

export type GetUserByEmail500 = { [key: string]: unknown };

export type GetUserBasic500 = { [key: string]: unknown };

export type GetUserProfile500 = { [key: string]: unknown };

export type Authorize500 = { [key: string]: unknown };

export type Authorize200 = { [key: string]: unknown };

export type AuthorizeParams = {
response_type: string;
client_id: string;
redirect_uri: string;
scope: string;
state: string;
};

export type Introspect500 = { [key: string]: unknown };

export type Introspect200 = { [key: string]: unknown };

export type IntrospectParams = {
bearerToken: string;
};

export type Userinfo500 = { [key: string]: unknown };

export type Userinfo200 = { [key: string]: unknown };

export type Logout500 = { [key: string]: unknown };

export type Logout200 = { [key: string]: unknown };

export type Register500 = { [key: string]: unknown };

export type Register200 = { [key: string]: unknown };

export type VerifyEmail500 = { [key: string]: unknown };

export type VerifyEmail200 = { [key: string]: unknown };

export type VerifyEmailParams = {
token: string;
};

export type CreatePermission500 = { [key: string]: unknown };

export type CreatePermission200 = { [key: string]: unknown };

export type GetAllPermissions500 = { [key: string]: unknown };

export type GetAllPermissions200 = { [key: string]: unknown };

export type RemovePermissionFromGroup500 = { [key: string]: unknown };

export type RemovePermissionFromGroup200 = { [key: string]: unknown };

export type RemovePermissionFromGroupParams = {
groupId: number;
permissionId: number;
};

export type AddPermissionToGroup500 = { [key: string]: unknown };

export type AddPermissionToGroup200 = { [key: string]: unknown };

export type AddPermissionToGroupParams = {
groupId: number;
permissionId: number;
};

export type CreateGroup500 = { [key: string]: unknown };

export type CreateGroup200 = { [key: string]: unknown };

export type GetAllGroups500 = { [key: string]: unknown };

export type GetAllGroups200 = { [key: string]: unknown };

export type CreateRole500 = { [key: string]: unknown };

export type CreateRole200 = { [key: string]: unknown };

export type GetAllRoles500 = { [key: string]: unknown };

export type GetAllRoles200 = { [key: string]: unknown };

export type CreateUser500 = { [key: string]: unknown };

export type GetAllUsers500 = { [key: string]: unknown };

export type RegisterClient500 = { [key: string]: unknown };

export type RegisterClient200 = { [key: string]: unknown };

export type InitiatePasswordReset500 = { [key: string]: unknown };

export type InitiatePasswordReset200 = { [key: string]: unknown };

export type InitiatePasswordResetBody = {[key: string]: string};

export type ResetPassword500 = { [key: string]: unknown };

export type ResetPassword200 = { [key: string]: unknown };

export type InitiateMfa500 = { [key: string]: unknown };

export type InitiateMfa200 = { [key: string]: unknown };

export type ResendCode500 = { [key: string]: unknown };

export type ResendCode200 = { [key: string]: unknown };

export type VerifyBackupCode500 = { [key: string]: unknown };

export type VerifyBackupCode200 = { [key: string]: unknown };

export type VerifyMfa500 = { [key: string]: unknown };

export type VerifyMfa200 = { [key: string]: unknown };

export type Login500 = { [key: string]: unknown };

export type Login200 = { [key: string]: unknown };

export type RevokeToken500 = { [key: string]: unknown };

export type RevokeToken200 = { [key: string]: unknown };

export type Token500 = { [key: string]: unknown };

export type Token200 = { [key: string]: unknown };

export type RemoveMembership500 = { [key: string]: unknown };

export type RemoveMembership200 = { [key: string]: unknown };

export type RemoveMembershipParams = {
userId: number;
groupId: number;
};

export type AddMembership500 = { [key: string]: unknown };

export type AddMembership200 = { [key: string]: unknown };

export type AddMembershipParams = {
userId: number;
groupId: number;
role: number;
};

export type UpdateRole1500 = { [key: string]: unknown };

export type UpdateRole1200 = { [key: string]: unknown };

export type UpdateRole1Params = {
userId: number;
groupId: number;
newRole: number;
};

export type DeletePermission500 = { [key: string]: unknown };

export type DeletePermission200 = { [key: string]: unknown };

export type UpdatePermission500 = { [key: string]: unknown };

export type UpdatePermission200 = { [key: string]: unknown };

export type GetPermissionById500 = { [key: string]: unknown };

export type GetPermissionById200 = { [key: string]: unknown };

export type DeleteGroup500 = { [key: string]: unknown };

export type DeleteGroup200 = { [key: string]: unknown };

export type UpdateGroup500 = { [key: string]: unknown };

export type UpdateGroup200 = { [key: string]: unknown };

export type GetGroupById500 = { [key: string]: unknown };

export type GetGroupById200 = { [key: string]: unknown };

export type DeleteRole500 = { [key: string]: unknown };

export type DeleteRole200 = { [key: string]: unknown };

export type UpdateRole500 = { [key: string]: unknown };

export type UpdateRole200 = { [key: string]: unknown };

export type GetRoleById500 = { [key: string]: unknown };

export type GetRoleById200 = { [key: string]: unknown };

export type UpdateUserAccess500 = { [key: string]: unknown };

export type GetUserAccess500 = { [key: string]: unknown };

export type UpdateUserSecurity500 = { [key: string]: unknown };

export type UpdateUserStatus500 = { [key: string]: unknown };

export type GetUserStatus500 = { [key: string]: unknown };

export type DeleteUser500 = { [key: string]: unknown };

export type UpdateUser500 = { [key: string]: unknown };

export type GetUser500 = { [key: string]: unknown };

export interface UserBasicDTO {
  id?: number;
  name?: string;
  email?: string;
  phoneNumber?: string;
  enabled?: boolean;
  accountNonLocked?: boolean;
  lockedUntil?: string;
  roleNames?: string[];
  lastLoginTime?: string;
  createdAt?: string;
  updatedAt?: string;
}

export interface LogoutRequest {
  email?: string;
  password?: string;
  client_id?: string;
}

export interface UserRegistrationRequest {
  name?: string;
  email?: string;
  password?: string;
  clientId?: string;
}

export type UserCreateRequestAttributes = {[key: string]: string};

export interface UserCreateRequest {
  name?: string;
  email?: string;
  password?: string;
  phoneNumber?: string;
  roleIds?: number[];
  groupIds?: number[];
  attributes?: UserCreateRequestAttributes;
}

export interface ClientRegistrationRequest {
  name?: string;
  applicationType?: string;
  redirectUris?: string[];
  grantTypes?: string[];
  scopes?: string[];
  responseTypes?: string[];
  clientId?: string;
}

export interface ResetPasswordRequest {
  email?: string;
  token?: string;
  newPassword?: string;
}

export interface MfaRequest {
  email?: string;
  token?: string;
  method?: string;
  clientId?: string;
  redirectUri?: string;
  state?: string;
  responseType?: string;
  scope?: string;
  isBackupCode?: boolean;
}

export interface AuthorizeRequest {
  responseType?: string;
  clientId?: string;
  redirectUri?: string;
  scope?: string;
  state?: string;
  email?: string;
  password?: string;
}

export interface TokenRequest {
  grantType?: string;
  state?: string;
  code?: string;
  refreshToken?: string;
  clientId?: string;
  clientSecret?: string;
  redirectUri?: string;
}

export interface Permission {
  id?: number;
  name?: string;
  description?: string;
  createdAt?: string;
  updatedAt?: string;
}

export interface Group {
  id?: number;
  name?: string;
  description?: string;
  parentGroupId?: number;
  createdAt?: string;
  updatedAt?: string;
}

export interface Role {
  id?: number;
  name?: string;
  description?: string;
  createdAt?: string;
  updatedAt?: string;
}

export interface UserAccessUpdateRequest {
  roleIds?: number[];
  groupIds?: number[];
  permissions?: string[];
}

export interface UserSecurityUpdateRequest {
  mfaEnabled?: boolean;
  mfaMethod?: string;
  password?: string;
  newPassword?: string;
  mfaBackupCodes?: string;
  resetFailedAttempts?: boolean;
}

export interface UserStatusUpdateRequest {
  enabled?: boolean;
  accountLocked?: boolean;
  resetFailedAttempts?: boolean;
  emailVerified?: boolean;
}

export interface UserStatusDTO {
  enabled?: boolean;
  accountLocked?: boolean;
  accountNonLocked?: boolean;
  accountNonExpired?: boolean;
  credentialsNonExpired?: boolean;
  lockedUntil?: string;
  failedLoginAttempts?: number;
  lastLoginTime?: string;
  emailVerified?: boolean;
  mfaEnabled?: boolean;
  accountExpired?: boolean;
  credentialsExpired?: boolean;
}

export interface UserSecurityDTO {
  enabled?: boolean;
  mfaEnabled?: boolean;
  mfaMethod?: string;
  emailVerified?: boolean;
  accountNonExpired?: boolean;
  accountNonLocked?: boolean;
  credentialsNonExpired?: boolean;
  failedLoginAttempts?: number;
  lockedUntil?: string;
  mfaBackupCodes?: string;
  lastPasswordChange?: string;
}

export type UserProfileDTOAttributes = {[key: string]: string};

export interface UserProfileDTO {
  id?: number;
  name?: string;
  email?: string;
  phoneNumber?: string;
  avatarUrl?: string;
  attributes?: UserProfileDTOAttributes;
  createdAt?: string;
  updatedAt?: string;
}

export interface RoleDTO {
  id?: number;
  name?: string;
  description?: string;
}

export interface GroupDTO {
  id?: number;
  name?: string;
  description?: string;
}

export interface UserAccessDTO {
  roles?: RoleDTO[];
  groups?: GroupDTO[];
  permissions?: string[];
}

export interface UserDetailsDTO {
  profile?: UserProfileDTO;
  status?: UserStatusDTO;
  security?: UserSecurityDTO;
  access?: UserAccessDTO;
  lastPasswordChange?: string;
}

export type UserUpdateRequestAttributes = {[key: string]: string};

export interface UserUpdateRequest {
  name?: string;
  phoneNumber?: string;
  roleIds?: number[];
  groupIds?: number[];
  attributes?: UserUpdateRequestAttributes;
}

